/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockNPass, MockNPassInterface } from "../MockNPass";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IN",
        name: "n",
        type: "address",
      },
      {
        internalType: "bool",
        name: "onlyNHolders",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "reservedAllowance",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "priceForNHoldersInWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceForOpenMintInWei",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_MULTI_MINT_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_N_TOKEN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mintWithN",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "multiMintWithN",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "n",
    outputs: [
      {
        internalType: "contract IN",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nHoldersMintsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onlyNHolders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openMintsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceForNHoldersInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceForOpenMintInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveMinted",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedAllowance",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162003163380380620031638339810160408190526200003591620003b6565b8787878787878787878781600090805190602001906200005792919062000230565b5080516200006d90600190602084019062000230565b50506001600a55506200008033620001de565b60008411620000d65760405162461bcd60e51b815260206004820152601460248201527f4e506173733a494e56414c49445f535550504c5900000000000000000000000060448201526064015b60405180910390fd5b841580620000ef5750848015620000ef57506122b88411155b6200013d5760405162461bcd60e51b815260206004820152601460248201527f4e506173733a494e56414c49445f535550504c590000000000000000000000006044820152606401620000cd565b8261ffff16841015620001935760405162461bcd60e51b815260206004820152601760248201527f4e506173733a494e56414c49445f414c4c4f57414e43450000000000000000006044820152606401620000cd565b60609590951b6001600160601b03191660805292151560f81b60a05260e09190915260f01b6001600160f01b03191660c052610100526101205250620004d698505050505050505050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200023e9062000483565b90600052602060002090601f016020900481019282620002625760008555620002ad565b82601f106200027d57805160ff1916838001178555620002ad565b82800160010185558215620002ad579182015b82811115620002ad57825182559160200191906001019062000290565b50620002bb929150620002bf565b5090565b5b80821115620002bb5760008155600101620002c0565b80518015158114620002e757600080fd5b919050565b600082601f830112620002fe57600080fd5b81516001600160401b03808211156200031b576200031b620004c0565b604051601f8301601f19908116603f01168101908282118183101715620003465762000346620004c0565b816040528381526020925086838588010111156200036357600080fd5b600091505b8382101562000387578582018301518183018401529082019062000368565b83821115620003995760008385830101525b9695505050505050565b805161ffff81168114620002e757600080fd5b600080600080600080600080610100898b031215620003d457600080fd5b88516001600160401b0380821115620003ec57600080fd5b620003fa8c838d01620002ec565b995060208b01519150808211156200041157600080fd5b50620004208b828c01620002ec565b60408b015190985090506001600160a01b03811681146200044057600080fd5b95506200045060608a01620002d6565b9450608089015193506200046760a08a01620003a3565b60c08a015160e0909a0151989b979a5095989497939692505050565b600181811c908216806200049857607f821691505b60208210811415620004ba57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160f81c60c05160f01c60e0516101005161012051612ba8620005bb600039600081816106dd015261179001526000818161064001528181610a7f0152610f5c015260008181610395015281816108dd01528181610e8e015281816113f9015261151b01526000818161032e015281816108b30152818161091501528181610ae701528181610e6401528181610ed2015281816110f4015281816113d7015281816114f9015261195d0152600081816104c701526115bc0152600081816103c9015281816109ad01528181610fd201526116bd0152612ba86000f3fe6080604052600436106102345760003560e01c80636a4c19d911610138578063a22cb465116100b0578063c87b56dd1161007f578063e985e9c511610064578063e985e9c514610662578063f2fde38b146106ab578063f82cbbe8146106cb57600080fd5b8063c87b56dd1461060e578063daf5d3741461062e57600080fd5b8063a22cb465146105a3578063ae5a583f146105c3578063b88d4fde146105d9578063c5de34a0146105f957600080fd5b8063853828b61161010757806391ba317a116100ec57806391ba317a1461056657806395d89b411461057b578063a0712d681461059057600080fd5b8063853828b6146105335780638da5cb5b1461054857600080fd5b80636a4c19d9146104b557806370a08231146104e9578063715018a6146105095780638416b6961461051e57600080fd5b80632ab4d052116101cb57806347febae81161019a5780634f6ccce71161017f5780634f6ccce7146104605780635d929f70146104805780636352211e1461049557600080fd5b806347febae81461042b5780634c81433f1461043e57600080fd5b80632ab4d052146103835780632e52d606146103b75780632f745c59146103eb57806342842e0e1461040b57600080fd5b8063095ea7b311610207578063095ea7b3146102dd57806318160ddd146102fd57806320bc84ce1461031c57806323b872dd1461036357600080fd5b806301ffc9a71461023957806306fdde031461026e578063081812fc146102905780630860b12c146102c8575b600080fd5b34801561024557600080fd5b506102596102543660046128ab565b6106ff565b60405190151581526020015b60405180910390f35b34801561027a57600080fd5b5061028361072a565b6040516102659190612995565b34801561029c57600080fd5b506102b06102ab3660046128e5565b6107bc565b6040516001600160a01b039091168152602001610265565b6102db6102d63660046128e5565b610856565b005b3480156102e957600080fd5b506102db6102f836600461280a565b610b55565b34801561030957600080fd5b506008545b604051908152602001610265565b34801561032857600080fd5b506103507f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610265565b34801561036f57600080fd5b506102db61037e3660046126b6565b610c6b565b34801561038f57600080fd5b5061030e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103c357600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b3480156103f757600080fd5b5061030e61040636600461280a565b610cf2565b34801561041757600080fd5b506102db6104263660046126b6565b610d9a565b6102db610439366004612836565b610db5565b34801561044a57600080fd5b50600b5461035090600160a01b900461ffff1681565b34801561046c57600080fd5b5061030e61047b3660046128e5565b61119d565b34801561048c57600080fd5b5061030e602081565b3480156104a157600080fd5b506102b06104b03660046128e5565b611241565b3480156104c157600080fd5b506102597f000000000000000000000000000000000000000000000000000000000000000081565b3480156104f557600080fd5b5061030e610504366004612643565b6112cc565b34801561051557600080fd5b506102db611366565b34801561052a57600080fd5b5061030e6113cc565b34801561053f57600080fd5b506102db611458565b34801561055457600080fd5b50600b546001600160a01b03166102b0565b34801561057257600080fd5b5061030e6114ee565b34801561058757600080fd5b50610283611553565b6102db61059e3660046128e5565b611562565b3480156105af57600080fd5b506102db6105be3660046127d7565b6117f3565b3480156105cf57600080fd5b5061030e6122b881565b3480156105e557600080fd5b506102db6105f43660046126f7565b6118b8565b34801561060557600080fd5b5061030e611946565b34801561061a57600080fd5b506102836106293660046128e5565b61198a565b34801561063a57600080fd5b5061030e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561066e57600080fd5b5061025961067d36600461267d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156106b757600080fd5b506102db6106c6366004612643565b611a80565b3480156106d757600080fd5b5061030e7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b0319821663780e9d6360e01b1480610724575061072482611b5f565b92915050565b60606000805461073990612a76565b80601f016020809104026020016040519081016040528092919081815260200182805461076590612a76565b80156107b25780601f10610787576101008083540402835291602001916107b2565b820191906000526020600020905b81548152906001019060200180831161079557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661083a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6002600a5414156108a95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610831565b6002600a5561ffff7f00000000000000000000000000000000000000000000000000000000000000001615801561090757507f000000000000000000000000000000000000000000000000000000000000000061090560085490565b105b806109415750600b5461ffff7f00000000000000000000000000000000000000000000000000000000000000008116600160a01b90920416105b61098d5760405162461bcd60e51b815260206004820152601c60248201527f4e506173733a4d41585f414c4c4f434154494f4e5f52454143484544000000006044820152606401610831565b6040516331a9108f60e11b81526004810182905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e9060240160206040518083038186803b1580156109ef57600080fd5b505afa158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190612660565b6001600160a01b031614610a7d5760405162461bcd60e51b815260206004820152601360248201527f4e506173733a494e56414c49445f4f574e4552000000000000000000000000006044820152606401610831565b7f00000000000000000000000000000000000000000000000000000000000000003414610ae25760405162461bcd60e51b81526020600482015260136024820152724e506173733a494e56414c49445f505249434560681b6044820152606401610831565b61ffff7f00000000000000000000000000000000000000000000000000000000000000001615610b4357600b8054600160a01b900461ffff16906014610b2783612ab1565b91906101000a81548161ffff021916908361ffff160217905550505b610b4d3382611baf565b506001600a55565b6000610b6082611241565b9050806001600160a01b0316836001600160a01b03161415610bce5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610831565b336001600160a01b0382161480610bea5750610bea813361067d565b610c5c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610831565b610c668383611bcd565b505050565b610c753382611c3b565b610ce75760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610831565b610c66838383611d32565b6000610cfd836112cc565b8210610d715760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610831565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610c66838383604051806020016040528060008152506118b8565b6002600a541415610e085760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610831565b6002600a55806020811115610e5f5760405162461bcd60e51b815260206004820152600f60248201527f4e506173733a544f4f5f4c4152474500000000000000000000000000000000006044820152606401610831565b61ffff7f000000000000000000000000000000000000000000000000000000000000000016158015610ec457507f000000000000000000000000000000000000000000000000000000000000000081610eb760085490565b610ec191906129c5565b11155b80610f0a5750600b5461ffff7f0000000000000000000000000000000000000000000000000000000000000000811691610f07918491600160a01b9004166129c5565b11155b610f565760405162461bcd60e51b815260206004820152601c60248201527f4e506173733a4d41585f414c4c4f434154494f4e5f52454143484544000000006044820152606401610831565b610f80817f00000000000000000000000000000000000000000000000000000000000000006129f1565b3414610fc45760405162461bcd60e51b81526020600482015260136024820152724e506173733a494e56414c49445f505249434560681b6044820152606401610831565b60005b818110156110ee57337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e86868581811061101157611011612b44565b905060200201356040518263ffffffff1660e01b815260040161103691815260200190565b60206040518083038186803b15801561104e57600080fd5b505afa158015611062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110869190612660565b6001600160a01b0316146110dc5760405162461bcd60e51b815260206004820152601360248201527f4e506173733a494e56414c49445f4f574e4552000000000000000000000000006044820152606401610831565b806110e681612ad3565b915050610fc7565b5061ffff7f000000000000000000000000000000000000000000000000000000000000000016156111535780600b60148282829054906101000a900461ffff1661113891906129a8565b92506101000a81548161ffff021916908361ffff1602179055505b60005b81811015611192576111803385858481811061117457611174612b44565b90506020020135611baf565b8061118a81612ad3565b915050611156565b50506001600a555050565b60006111a860085490565b821061121c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610831565b6008828154811061122f5761122f612b44565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806107245760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610831565b60006001600160a01b03821661134a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610831565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031633146113c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610831565b6113ca6000611ef1565b565b60008061141d61ffff7f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000612a33565b600b5490915060009061ffff600160a01b9091041661143b60085490565b6114459190612a33565b90506114518183612a33565b9250505090565b600b546001600160a01b031633146114b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610831565b600b546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156114eb573d6000803e3d6000fd5b50565b60008061153f61ffff7f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000612a33565b905061154d816122b86129c5565b91505090565b60606001805461073990612a76565b6002600a5414156115b55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610831565b6002600a557f0000000000000000000000000000000000000000000000000000000000000000156116285760405162461bcd60e51b815260206004820152601b60248201527f4e506173733a4f50454e5f4d494e54494e475f44495341424c454400000000006044820152606401610831565b60006116326113cc565b1161167f5760405162461bcd60e51b815260206004820152601c60248201527f4e506173733a4d41585f414c4c4f434154494f4e5f52454143484544000000006044820152606401610831565b6122b88111801561169757506116936114ee565b8111155b8061174257506040516331a9108f60e11b81526004810182905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e9060240160206040518083038186803b1580156116ff57600080fd5b505afa158015611713573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117379190612660565b6001600160a01b0316145b61178e5760405162461bcd60e51b815260206004820152601060248201527f4e506173733a494e56414c49445f4944000000000000000000000000000000006044820152606401610831565b7f00000000000000000000000000000000000000000000000000000000000000003414610b435760405162461bcd60e51b81526020600482015260136024820152724e506173733a494e56414c49445f505249434560681b6044820152606401610831565b6001600160a01b03821633141561184c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610831565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6118c23383611c3b565b6119345760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610831565b61194084848484611f43565b50505050565b600b5460009061198190600160a01b900461ffff167f0000000000000000000000000000000000000000000000000000000000000000612a10565b61ffff16905090565b6000818152600260205260409020546060906001600160a01b0316611a175760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610831565b6000611a2e60408051602081019091526000815290565b90506000815111611a4e5760405180602001604052806000815250611a79565b80611a5884611fc1565b604051602001611a6992919061292a565b6040516020818303038152906040525b9392505050565b600b546001600160a01b03163314611ada5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610831565b6001600160a01b038116611b565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610831565b6114eb81611ef1565b60006001600160e01b031982166380ac58cd60e01b1480611b9057506001600160e01b03198216635b5e139f60e01b145b8061072457506301ffc9a760e01b6001600160e01b0319831614610724565b611bc98282604051806020016040528060008152506120d7565b5050565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c0282611241565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316611cb45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610831565b6000611cbf83611241565b9050806001600160a01b0316846001600160a01b03161480611cfa5750836001600160a01b0316611cef846107bc565b6001600160a01b0316145b80611d2a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611d4582611241565b6001600160a01b031614611dc15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610831565b6001600160a01b038216611e235760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610831565b611e2e838383612155565b611e39600082611bcd565b6001600160a01b0383166000908152600360205260408120805460019290611e62908490612a33565b90915550506001600160a01b0382166000908152600360205260408120805460019290611e909084906129c5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611f4e848484611d32565b611f5a8484848461220d565b6119405760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610831565b606081611fe55750506040805180820190915260018152600360fc1b602082015290565b8160005b811561200f5780611ff981612ad3565b91506120089050600a836129dd565b9150611fe9565b60008167ffffffffffffffff81111561202a5761202a612b5a565b6040519080825280601f01601f191660200182016040528015612054576020820181803683370190505b5090505b8415611d2a57612069600183612a33565b9150612076600a86612aee565b6120819060306129c5565b60f81b81838151811061209657612096612b44565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506120d0600a866129dd565b9450612058565b6120e18383612365565b6120ee600084848461220d565b610c665760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610831565b6001600160a01b0383166121b0576121ab81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6121d3565b816001600160a01b0316836001600160a01b0316146121d3576121d383826124b3565b6001600160a01b0382166121ea57610c6681612550565b826001600160a01b0316826001600160a01b031614610c6657610c6682826125ff565b60006001600160a01b0384163b1561235a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612251903390899088908890600401612959565b602060405180830381600087803b15801561226b57600080fd5b505af192505050801561229b575060408051601f3d908101601f19168201909252612298918101906128c8565b60015b612340573d8080156122c9576040519150601f19603f3d011682016040523d82523d6000602084013e6122ce565b606091505b5080516123385760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610831565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611d2a565b506001949350505050565b6001600160a01b0382166123bb5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610831565b6000818152600260205260409020546001600160a01b0316156124205760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610831565b61242c60008383612155565b6001600160a01b03821660009081526003602052604081208054600192906124559084906129c5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016124c0846112cc565b6124ca9190612a33565b60008381526007602052604090205490915080821461251d576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061256290600190612a33565b6000838152600960205260408120546008805493945090928490811061258a5761258a612b44565b9060005260206000200154905080600883815481106125ab576125ab612b44565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806125e3576125e3612b2e565b6001900381819060005260206000200160009055905550505050565b600061260a836112cc565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60006020828403121561265557600080fd5b8135611a7981612b70565b60006020828403121561267257600080fd5b8151611a7981612b70565b6000806040838503121561269057600080fd5b823561269b81612b70565b915060208301356126ab81612b70565b809150509250929050565b6000806000606084860312156126cb57600080fd5b83356126d681612b70565b925060208401356126e681612b70565b929592945050506040919091013590565b6000806000806080858703121561270d57600080fd5b843561271881612b70565b9350602085013561272881612b70565b925060408501359150606085013567ffffffffffffffff8082111561274c57600080fd5b818701915087601f83011261276057600080fd5b81358181111561277257612772612b5a565b604051601f8201601f19908116603f0116810190838211818310171561279a5761279a612b5a565b816040528281528a60208487010111156127b357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156127ea57600080fd5b82356127f581612b70565b9150602083013580151581146126ab57600080fd5b6000806040838503121561281d57600080fd5b823561282881612b70565b946020939093013593505050565b6000806020838503121561284957600080fd5b823567ffffffffffffffff8082111561286157600080fd5b818501915085601f83011261287557600080fd5b81358181111561288457600080fd5b8660208260051b850101111561289957600080fd5b60209290920196919550909350505050565b6000602082840312156128bd57600080fd5b8135611a7981612b85565b6000602082840312156128da57600080fd5b8151611a7981612b85565b6000602082840312156128f757600080fd5b5035919050565b60008151808452612916816020860160208601612a4a565b601f01601f19169290920160200192915050565b6000835161293c818460208801612a4a565b835190830190612950818360208801612a4a565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261298b60808301846128fe565b9695505050505050565b602081526000611a7960208301846128fe565b600061ffff80831681851680830382111561295057612950612b02565b600082198211156129d8576129d8612b02565b500190565b6000826129ec576129ec612b18565b500490565b6000816000190483118215151615612a0b57612a0b612b02565b500290565b600061ffff83811690831681811015612a2b57612a2b612b02565b039392505050565b600082821015612a4557612a45612b02565b500390565b60005b83811015612a65578181015183820152602001612a4d565b838111156119405750506000910152565b600181811c90821680612a8a57607f821691505b60208210811415612aab57634e487b7160e01b600052602260045260246000fd5b50919050565b600061ffff80831681811415612ac957612ac9612b02565b6001019392505050565b6000600019821415612ae757612ae7612b02565b5060010190565b600082612afd57612afd612b18565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146114eb57600080fd5b6001600160e01b0319811681146114eb57600080fdfea164736f6c6343000806000a";

export class MockNPass__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    n: string,
    onlyNHolders: boolean,
    maxTotalSupply: BigNumberish,
    reservedAllowance: BigNumberish,
    priceForNHoldersInWei: BigNumberish,
    priceForOpenMintInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockNPass> {
    return super.deploy(
      name,
      symbol,
      n,
      onlyNHolders,
      maxTotalSupply,
      reservedAllowance,
      priceForNHoldersInWei,
      priceForOpenMintInWei,
      overrides || {}
    ) as Promise<MockNPass>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    n: string,
    onlyNHolders: boolean,
    maxTotalSupply: BigNumberish,
    reservedAllowance: BigNumberish,
    priceForNHoldersInWei: BigNumberish,
    priceForOpenMintInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      n,
      onlyNHolders,
      maxTotalSupply,
      reservedAllowance,
      priceForNHoldersInWei,
      priceForOpenMintInWei,
      overrides || {}
    );
  }
  attach(address: string): MockNPass {
    return super.attach(address) as MockNPass;
  }
  connect(signer: Signer): MockNPass__factory {
    return super.connect(signer) as MockNPass__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNPassInterface {
    return new utils.Interface(_abi) as MockNPassInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockNPass {
    return new Contract(address, _abi, signerOrProvider) as MockNPass;
  }
}
